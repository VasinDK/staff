// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/staff": {
            "put": {
                "description": "Обновляет данные сотрудника по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Обновляет данные сотрудника",
                "parameters": [
                    {
                        "description": "Сотрудник",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{\"id\": 3, \"passportNumber\": 99999}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ок",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет сотрудника",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Добавляет сотрудника",
                "parameters": [
                    {
                        "description": "Сотрудник",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{\"name\": \"Кирил\", \"surname\": \"Ручников\", \"phone\": \"877799977\", \"companyId\": 1, \"passportNumber\": 1122331, \"passportTypeId\": 2, \"departmentId\":1}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ок",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/staff/{company_id}": {
            "get": {
                "description": "Получаем сотрудника по id компании и id департамента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Получаем сотрудника",
                "parameters": [
                    {
                        "type": "string",
                        "default": "1",
                        "description": "id департамента",
                        "name": "department_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "id компании",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Staff"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/staff/{id}": {
            "delete": {
                "description": "Удаляет сотрудника по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Удаляет сотрудника",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Запись удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Department": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "бухгалтерия"
                },
                "phone": {
                    "type": "string",
                    "example": "22-33-88-888"
                }
            }
        },
        "entity.Passport": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string",
                    "example": "112223"
                },
                "type": {
                    "type": "string",
                    "example": "2"
                }
            }
        },
        "entity.Staff": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "example": 2
                },
                "department": {
                    "$ref": "#/definitions/entity.Department"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Кирил"
                },
                "passport": {
                    "$ref": "#/definitions/entity.Passport"
                },
                "phone": {
                    "type": "string",
                    "example": "877799977"
                },
                "surname": {
                    "type": "string",
                    "example": "Ручников"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Документация для проекта staff",
	Description:      "Web-Сервис сотрудников. Сервис добавляет сотрудников,\nудаляет по id, выводит список для указанной компании,список для отдела. Изменяет сотрудников по id",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
